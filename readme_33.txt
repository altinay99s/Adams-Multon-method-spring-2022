Задача №33 Метод сведение уравнения к системе второго порядка, нахождения решения этой системы ДУ
метод Адамса-Мултона и используя метод Ньютона для решения уравнения.

В начале открывается файл для считывания значений и этот файл проверяется на пустоту. Потом считываются значение и
эти значения проверяются на корректность. Например h должен быть положительным числом.
Далее высчитывается n. Выделяются память для приближённого значения y (для него выделяются 2 массива),
для его точного значения и для иксов. Сразу же высчитываются точное значение вместе с иксами. Высчитывается приближённое
значение и уменьшается шаг в 2 раза.

Далее в цикле мы используем метод Ньютона, с каждым разом уменьшая шаг в 2 раза и проверяя разницу между новым приближённым
значением и предыдущим. Этот цикл проводится до того, пока не достигнется нужная точность.

В самом методе Ньютона объявляем переменную, которая будет параметром для задачи Коши (я объявила лямбду и присвоила ей 1).
Далее находим приближённое значение игриков методом Адамса-Мултона и В цикле сравниваем значение на конце с заданным
значением, пока значение на конце не будет иметь нужную точность, будем менять параметр и находить новое приближение.

В методе Адамса-Мултона сначала надо откатать назад, т.к для нахождения каждого следующего игрика нужно 3 предыдущих
значения. Потом для нового шага высчитывается новое значение n. В цикле находим все n значений игрик по формуле
Адамса-Мултона, сохраняя те узлы, которые будут нужны в дальнейшем.

В конце рисуется график и выводятся в файл значение n и найденные значения узлов.

Решается система:
    y1' = y2
    y2' = f(x)-p(x)*y2-q(x)*y1 (далее эта ф-ция обозначена как g_k)
    y1(a)=c
    y2(a)=lambda
    где y1 = y, y2 = y'

Формула для откатывания назад:
        y_k-1=y_k-h*f_k
Формулы Адамса-Мултона:
    y1_k+1 = y1_k + h/24 * (9*y2_(k+1) +19*y2_k -5*y2_(k-1)+y2_(k-2))
    y2_k+1 = (y2_k + h/24 * (9*(f_(k+1) - q_(k+1)*(y1_k + h/24 * (19*y2_k - 5 y2_(k-1) + y2_(k-2)))) + 19*g_k - 5*g_(k-1) + g_(k-2))) / (1 + 3/8*h*p_(k+1) + 9/64*h*h*q_(k+1))




